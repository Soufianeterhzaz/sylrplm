#!/bin/sh
cmd="rails -d mysql $1"
echo $cmd
$cmda
cd $1

eof:

mysqladmin -u root password xxxx
modifier /etc/my.cnf
datadir = /home/mysql/data 

mysqladmin -u root -p create $1_development

mysqladmin -u root -p create $1_production

rake db:migrate

ruby script/generate scaffold document ident:string type:string revision:string designation:string description:text extension:string repository:string status:string responsible:string group:string date:date
ruby script/generate model document
ruby script/generate controller document
ruby script/generate scaffold part ident:string type:string revision:string designation:string description:text status:string responsible:string group:string date:date
ruby script/generate model part
ruby script/generate controller part
ruby script/generate scaffold project ident:string type:string designation:string description:text status:string responsible:string group:string date:date
ruby script/generate model project
ruby script/generate controller project
ruby script/generate scaffold customer ident:string type:string designation:string description:text responsible:string group:string date:date
ruby script/generate model customer
ruby script/generate controller customer
ruby script/generate model favori

rake db:sessions:create

ruby script/generate scaffold partslinks father_id:integer child_id:integer designation:string description:text quantity:float responsible:string group:string date:date
ruby script/generate scaffold typesobject object:string name:string description:text
ruby script/generate scaffold statusobject object:string name:string rank:integer description:text
ruby script/generate scaffold role name:string description:text
ruby script/generate scaffold volume name:string description:text directory:string protocole:string
ruby script/generate mailer PLMMailer toValidate validated
ruby script/generate scaffold sequence object:string value:string min:string max:string
ruby script/generate scaffold links father_object:string child_object:string father_id:integer child_id:integer name:string designation:string description:text responsible:string group:string date:date
ruby script/generate scaffold checks object:string object_id:integer status:integer out_reason:string out_date:date out_user:integer in_reason:string in_date:date in_user:integer local_dir:string
ruby script/generate scaffold access controller:string action:integer role_id:integer
---
--- forums
--- 
ruby script/generate scaffold forum typesobject_id:integer statusobject_id:integer subject:string description:text owner_id:integer
ruby script/generate scaffold forum_item message:text forum_id:integer parent_id:integer owner_id:integer

ruby script/generate scaffold roles_users role_id:integer user_id:integer
attention, c'est une table de jointure, il faut supprimer la colonne id (par mysql admin)

ruby script/generate scaffold document ident:string type:string revision:string designation:string description:text extension:string repository:string status:string responsible:string group:string date:date
ruby script/generate scaffold datafile ident:string filename:string revision:integer typesobject_id:integer content_type:string owner_id:integer volume_id:integer

---
--- notifications
--- 
ruby script/generate scaffold notification object_type:string object_id:integer event_date:date event_type:text responsible_id:integer notify_date:date

---
--- relations
---
ruby script/generate scaffold relation name:string type:string designation:string father_plmtype:string child_plmtype:string father_type:integer child_type:integer cardin_occur_min:integer cardin_occur_max:integer cardin_use_min:integer cardin_use_max:integer

# plugin pour la pagination 
#script/plugin install git://github.com/mislav/will_paginate.git
#To enable the library your Rails 2.1 (or later) project, use the gem configuration method in ?config/environment.rb?
#Rails::Initializer.run do |config|
#  config.gem 'will_paginate', :version => '~> 2.3.11', :source => 'http://gemcutter.org'
#end
#To install this gem (and all other missing gem dependencies), run rake gems:install (use sudo if necessary). Also, don?t forget to #restart your webserver after editing environment.rb.

#creer le premier user
ruby script/console
User.create(:login=> "dave", :password=>"secret",:password_confirmation => "secret", :role_id=>1, :email=>"sylvani@laposte.net")
User.count
exit

---
--- plugin faq
---

./script/plugin install http://vorlich.ath.cx/code/excited/plugins/faq_u
./script/generate faq
rake db:migrate
atttention, en fait, je l'ai remanie (les vues) pour enlever le format haml
cmd="ruby script/generate scaffold question question:string answer:string position:integer"
echo $cmd
$cmd

---
--- plugin de gestion d'autorisations
---
ruby script/plugin install http://opensvn.csie.org/ezra/rails/plugins/dev/acl_system2

---
--- help perso
---
cmd="ruby script/generate controller help"
echo $cmd
$cmd

---
--- doc
---
rake doc:app

production:

rake db:migrate RAILS_ENV=production
si pb:
You probably forgot to do: rake db:create:all.
But anyway, read the first lines of schema.rb, for the first time on a production environment you should use: 
rake db:schema:load RAILS_ENV=production

creer la base
mysqladmin -u root create $1_production

charger le schema
rake db:schema:load RAILS_ENV=production

revenir en arriere
rake db:migrate:down VERSION=timestamp
rake db:migrate:reset

doc sur rake
rake -T [db test tmp routes stats rails log notes gems doc]

=======================================================
github

Global setup:

 Download and install Git: http://kernel.org/pub/software/scm/git/RPMS/i386/git-all-1.7.3.2-1.fc11.i386.rpm
 
  git config --global user.name "Your Name"
  git config --global user.email sylvani@laposte.net
  Add your public key: https://github.com/account#keys
        
Next steps:

  mkdir sylrplm
  cd sylrplm
  git init
  touch README
  git add README
  git commit -m 'first commit'
  git remote add origin git@github.com:sylvani/sylrplm.git
  git push origin master
      
  git add .gitignore
  git commit -m 'second commit'
  git push origin master
  
  git add .
  git commit -m 'all commit'
  git push origin master
  
  
Existing Git Repo?

  cd existing_git_repo
  git remote add origin git@github.com:sylvani/sylrplm.git
  git push origin master
  
  git pull origin master
     
generateur de schemas
gem install railroad
dans config linux: install de graphviz pour dot
railroad -a -i -M | dot -Tsvg > public/mdd/models.svg
railroad -a -i -C | dot -Tsvg > public/mdd/controllers.svg
ou
railroad -a -i -M | neato -Tpng > public/mdd/models.png
railroad -a -i -C | neato -Tpng > public/mdd/controllers.png

site hebergement heroku.com

===========================================================
test
===========================================================

#creation de la base
mysqladmin -u root -p create sylrplm_test


#creation du schema
echo $PATH
/home/syl/.gem/ruby/1.8/bin:/sbin:/usr/sbin:/bin:/usr/bin:/usr/X11R6/bin:/usr/local/bin:/usr/local/sbin:/usr/lib/qt4/bin

export PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/X11R6/bin:/usr/local/bin:/usr/local/sbin:/usr/lib/qt4/bin
rake db:test:prepare

copie de vendor/plugins/acl_system2/lib/caboose dans lib !!!

#test
ruby test/unit/document_test.rb
1) Error:
test_the_truth(DocumentTest):
ActiveRecord::StatementInvalid: Mysql::Error: Table 'sylrplm_test.utilities' doesn't exist: DELETE FROM `utilities`

ruby script/destroy model utilities

ruby test/unit/document_test.rb
ActiveRecord::StatementInvalid: Mysql::Error: Table 'sylrplm_test.partslinks' doesn't exist: DELETE FROM `partslinks`
1 tests, 0 assertions, 0 failures, 1 errors
[syl@localhost sylrplm]$ ruby script/destroy model partslinks

ruby test/unit/document_test.rb
test_the_truth(DocumentTest):
ActiveRecord::StatementInvalid: Mysql::Error: Table 'sylrplm_test.favoris' doesn't exist: DELETE FROM `favoris`  
1 tests, 0 assertions, 0 failures, 1 errors
[syl@localhost sylrplm]$ ruby script/destroy model favoris

ruby test/unit/document_test.rb
test_the_truth(DocumentTest):
ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'name' in 'field list': INSERT INTO `roles` (`name`, `created_at`, `updated_at`, `id`, `description`) VALUES ('MyString', '2010-12-23 11:37:54', '2010-12-23 11:37:54', 298486374, 'MyText')
modif de test/fixtures/roles.yml et remplacer name par title

ruby test/unit/document_test.rb
test_the_truth(DocumentTest):
ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'object' in 'field list': INSERT INTO `sequences` (`created_at`, `updated_at`, `max`, `id`, `value`, `min`, `object`) VALUES ('2010-12-23 11:40:51', '2010-12-23 11:40:51', 'MyString', 298486374, 'MyString', 'MyString', 'MyString')
modif de test/fixtures/sequences.yml et remplacer object par utility
modif de test/fixtures/forums.yml et remplacer typeobjects_id par typesobject_id
modif de test/fixtures/accesses.yml et remplacer role_id par roles

<%= select(:user, "role", @roles.collect {|p| [ p.title, p.id ] } ) %>

-------------------------
exporter la base en yml
-------------------------
charger le plugin
script/plugin install git://github.com/adamwiggins/yaml_db.git 
#exporter toute la base dans db/data.yml
rake db:data:dump 
#recharger la base
rake db:data:load 
# Create YAML test fixtures from data in an existing database. 
rake db:fixtures:dump 
    

--------------------------------------------------------
lancer une tache regulierement
-------------------------------
> On a *nix server, you'll want to use cron. On a Windows server, you
> might be able to use Scheduled Tasks.

As suggested above, you can use Unix cron / Windows scheduled tasks to
run a Rails rake task.

0 * * * * wget -O - -q http://www.domain.tld/maintenance

http://www.fallenrogue.com/articles/168-Script-vs-Rake

Create a new file in lib/tasks with the extension .rake with your
required task. To invoke it simply cd to your rails directory and run
rake with your task name (optionally specify the Rails environment).
The code inside the task will have full access to your Rails
environment including models.

cd /path/to/rails/application
rake <task_name> RAILS_ENV=production

voir aussi , plus moderne
http://www.igvita.com/2007/03/29/scheduling-tasks-in-ruby-rails/

-----------------------------
scheduler : installe
-----------------------------
https://github.com/jmettraux/rufus-scheduler/
gem install rufus-scheduler


------------------------------
--- hebergement sur heroku
------------------------------

---
--- install heroku
---
[root@localhost sylrplm (master)]# gem install heroku 

---
--- install de la cle 
---
[syl@localhost sylrplm (master)]$ heroku keys:add

Uploading ssh public key /home/syl/.ssh/id_rsa.pub
Enter your Heroku credentials.
Email: sylvere.coutable@laposte.net
Password: 

---
--- Create your Heroku application
---
heroku create

Creating freezing-stone-916... done, stack is bamboo-mri-1.9.2
http://freezing-stone-916.heroku.com/ | git@heroku.com:freezing-stone-916.git
Git remote heroku added

---
--- Push your application to Heroku
---
git push heroku master

Warning: Permanently added 'heroku.com,50.19.85.154' (RSA) to the list of known hosts.
Counting objects: 3224, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (1246/1246), done.
Writing objects: 100% (3224/3224), 2.76 MiB | 378 KiB/s, done.
Total 3224 (delta 1993), reused 2983 (delta 1863)
...
-----> Launching... done, v3
       http://freezing-stone-916.heroku.com deployed to Heroku

To git@heroku.com:freezing-stone-916.git
 * [new branch]      master -> master
[syl@localhost sylrplm (master)]$ 

---
--- Bootstrap your database
---
[syl@localhost sylrplm (master)]$ heroku rake db:migrate

(in /app)

---
--- Next Steps
---
Now that your application is running, it’s easy to push updates:

   1. Develop and test changes locally.
   2. Commit code to git.
   3. Push your changes to Heroku with git push heroku.

---
--- essai d'installer ruote dans le projet
---
gem install bundler

--- creation fichier Gemfile:

source "https://github.com/jmettraux/ruote/"
source :rubygems
source :rubyforge
source :gemcutter
gem "ruote", "~>2.1"

bundle install --path vendor

--- pour assurer le dev a plusieurs 
git add Gemfile Gemfile.lock

#puis copier le gem ruote a la place de celui installe ci dessus
copier le contenu de /usr/lib/ruby/gems/1.8/gems/ruote-2.2.0 vers /home/syl/trav/rubyonrails/sylrplm/vendor/ruby/1.8/gems/ruote-2.2.0/

#puis maj git sylrplm
par smartgit (commit puis push)

#puis maj heroku
git push heroku master

# puis poursuite install heroku
heroku rake db:migrate

meme erreur

heroku create
Creating fierce-journey-219... done, stack is bamboo-mri-1.9.2
http://fierce-journey-219.heroku.com/ | git@heroku.com:fierce-journey-219.git
Git remote heroku added

---
--- essai apres copie de openwfe dans le projet (lib/openwfe
---

--- ajouter dans Gemfile
source :rubygems
source :rubyforge
source :gemcutter
source "https://github.com/jmettraux/ruote/"
source "http://gems.github.com"
gem "ruote", ">=2.2"
gem "rufus-verbs"
gem "mislav-will_paginate" , ">= 2.3.6" 
gem "atom-tools" 

heroku rake gems:install

# apres modif Gemfile
bundle update

--- maj heroku
git push heroku master

--- Bootstrap your database
heroku rake db:migrate

# apres modif fichier du projet
git commit -am "heroku migrate";git push heroku;heroku rake db:migrate

-------------------------
--- transfert de la bd vers heroku
-------------------------
--- installer l'outil taps
gem install taps

--- pousser la bd locale vers heroku 
--- le nom est lu dans database.yml
heroku db:push

Loaded Taps v0.3.23
Auto-detected local database: mysql://root:pa33zp62@127.0.0.1/sylrplm_development?encoding=utf8
Enter your Heroku credentials.
Email: sylvere.coutable@laposte.net
Password: 
> freezing-stone-916
Failed to connect to database:
  Sequel::DatabaseConnectionError -> Mysql::Error: Can't connect to MySQL server on '127.0.0.1' (111)

# voir les logs apres acces au site http://freezing-stone-916.heroku.com
# seulement 100 lignes
heroku logs

# pour en voir plus
heroku addons:add logging:basic
heroku logs -n 500

#encore mieux 
heroku addons:upgrade logging:expanded
heroku logs --tail

# eviter les fichiers por ruote
gem install datamapper dm-mysql-adapter --no-ri --no-rdoc

ajouter db/migrate/ruote_expression.rb:
require 'openwfe/extras/expool/ar_expstorage'
class RuoteExpression < OpenWFE::Extras::ExpressionTables
  #
end

git add *;git commit -am "heroku migrate";git push heroku

heroku rake --trace db:migrate VERSION=2011072301

#si ok:
heroku restart

#ou reset de la base
heroku pg:reset SHARED_DATABASE
puis ??? heroku rake db:schema:load

heroku open;heroku logs -n 500
http://sylrplm.heroku.com/

heroku logs -n 500
erreur sur fichier pooltool.ru manquant dans /app/lib
copy du work_development/pooltool.ru dans sylrplm/lib


--- install ruby 1.9
telecharger ruby-1.9.2-p290.tar.gz
dezipper
cd dans le repertoire
modifier le fichier ext/Setup en activant des modules
./configure
make
make install

-- notes sur modifs de remy
Gemfile
notifications.rb : notify devient notify_me
config/initializers/sylrplm_init.rb:  reactive le scheduler des notifications (tres utile)
ruote_plugin: init.rb et ruote_plugin.rb :enlever le worker, engine=db et non fs

--- ca marche !

#mon site dev heroku
https://api.heroku.com/myapps

---
--- ruote-kit remplace ruote_plugin
---
git clone http://github.com/tosch/ruote-kit.git && cd ruote-kit 
bundle install
rackup
(non utilise)

----------------------------------------------------
--- bug dans openwfe/expressions/flowexpression.rb
iv.delete(:@application_context) etait iv.delete('@application_context') ce qui entraiant une erreur sur Mutex
----------------------------------------------------

---
--- plugin barrcode
---
sudo gem install rmagick
sudo gem install gbarcode
ruby script/plugin install http://barcode-generator.googlecode.com/svn/trunk/barcode_generator
pb install des gems
(non utilise)

-----------------
vider la base
-----------------
heroku rake db:reset

---
--- recreer la base avec les migrations
---
rake db:drop
rake db:create
rake db:migrate (schema par les migrations)
ou rake db:drop;rake db:create;rake db:load (schema+data, il faut db/data.yml
ou rake db:drop;rake db:create;rake db:schema:load (schema seul, pas de data)
heroku rake db:drop;heroku rake db:create;heroku rake db:schema:load 
heroku open;heroku logs -n 500